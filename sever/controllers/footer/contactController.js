const ContactUs = require("../../models/footer/Contact");
const catchAsync = require("../../utils/catchAsync");

// L·∫•y t·∫•t c·∫£ Contact Us
exports.getAllContactUs = catchAsync(async (req, res, next) => {
  // L·∫•y c√°c query parameters t·ª´ request
  const page = parseInt(req.query.page) || 1; // M·∫∑c ƒë·ªãnh l√† trang 1
  const limit = parseInt(req.query.limit) || 10; // M·∫∑c ƒë·ªãnh 10 m·ª•c m·ªói trang
  const skip = (page - 1) * limit; // T√≠nh s·ªë b·∫£n ghi c·∫ßn b·ªè qua

  // ƒêi·ªÅu ki·ªán l·ªçc: kh√¥ng bao g·ªìm li√™n h·ªá ƒë√£ x√≥a
  const query = { isDeleted: false };

  // ƒê·∫øm t·ªïng s·ªë li√™n h·ªá th·ªèa m√£n ƒëi·ªÅu ki·ªán
  const totalContacts = await ContactUs.countDocuments(query);

  // L·∫•y danh s√°ch li√™n h·ªá v·ªõi ph√¢n trang
  const contactUs = await ContactUs.find(query).skip(skip).limit(limit);

  // T√≠nh t·ªïng s·ªë trang
  const totalPages = Math.ceil(totalContacts / limit);

  res.status(200).json({
    status: "success",
    results: contactUs.length,
    total: totalContacts,
    totalPages: totalPages,
    currentPage: page,
    data: { contactUs },
  });
});

exports.createContactUs = async (req, res) => {
  try {
    console.log("üì© Received data:", req.body);
    if (!req.body.name || !req.body.mail || !req.body.subject || !req.body.message) {
      return res.status(400).json({ status: "error", error: "Thi·∫øu th√¥ng tin c·∫ßn thi·∫øt" });
    }

    const newContactUs = await ContactUs.create(req.body);
    res.status(201).json({ status: "success", data: newContactUs });
  } catch (error) {
    console.error("‚ùå Error creating contact:", error);
    res.status(500).json({
      status: "error",
      error: "L·ªói t·∫°o Contact Us",
      details: error.message,
    });
  }
};

// X√≥a c·ª©ng Contact Us
exports.hardDeleteContactUs = async (req, res) => {
  const { id } = req.params;
  try {
    const contact = await ContactUs.findById(id);
    if (!contact) {
      return res.status(404).json({ success: false, message: "Contact kh√¥ng t·ªìn t·∫°i!" });
    }
    await ContactUs.findByIdAndDelete(id);
    res.status(200).json({ success: true, message: "Contact Us ƒë√£ b·ªã x√≥a vƒ©nh vi·ªÖn" });
  } catch (error) {
    console.error("L·ªói x√≥a li√™n h·ªá:", error);
    res.status(500).json({ success: false, message: "L·ªói x√≥a c·ª©ng Contact Us" });
  }
};

// C·∫≠p nh·∫≠t tr·∫°ng th√°i isResolved c·ªßa Contact Us
exports.updateContactUs = async (req, res) => {
  try {
    console.log(`üì§ C·∫≠p nh·∫≠t Contact ID: ${req.params.id}`, req.body);

    const updatedContact = await ContactUs.findByIdAndUpdate(req.params.id, req.body, {
      new: true,
      runValidators: true,
    });

    if (!updatedContact) {
      return res.status(404).json({ success: false, message: "Contact kh√¥ng t·ªìn t·∫°i." });
    }

    console.log("‚úÖ Contact ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t:", updatedContact);
    res.json({
      success: true,
      message: "C·∫≠p nh·∫≠t th√†nh c√¥ng!",
      data: updatedContact,
    });
  } catch (error) {
    console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t Contact:", error);
    res.status(500).json({
      success: false,
      message: "L·ªói server khi c·∫≠p nh·∫≠t Contact",
      error: error.message,
    });
  }
};
