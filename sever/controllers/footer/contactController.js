const ContactUs = require("../../models/footer/Contact");

// L·∫•y t·∫•t c·∫£ Contact Us
exports.getAllContactUs = async (req, res) => {
    try {
        const contactUs = await ContactUs.find({ isDeleted: false });
        res.status(200).json({ status: "success", data: contactUs });
    } catch (error) {
        res.status(500).json({ status: "error", error: "L·ªói l·∫•y d·ªØ li·ªáu Contact Us" });
    }
};
exports.createContactUs = async (req, res) => {
    try {
        console.log("üì© Received data:", req.body);
        if (!req.body.name || !req.body.mail || !req.body.subject || !req.body.message) {
            return res.status(400).json({ status: "error", error: "Thi·∫øu th√¥ng tin c·∫ßn thi·∫øt" });
        }

        const newContactUs = await ContactUs.create(req.body);
        res.status(201).json({ status: "success", data: newContactUs });
    } catch (error) {
        console.error("‚ùå Error creating contact:", error);
        res.status(500).json({ status: "error", error: "L·ªói t·∫°o Contact Us", details: error.message });
    }
};

// X√≥a c·ª©ng Contact Us
exports.hardDeleteContactUs = async (req, res) => {
    const { id } = req.params;
    try {
        const contact = await ContactUs.findById(id);
        if (!contact) {
            return res.status(404).json({ success: false, message: "Contact kh√¥ng t·ªìn t·∫°i!" });
        }
        await ContactUs.findByIdAndDelete(id);
        res.status(200).json({ success: true, message: "Contact Us ƒë√£ b·ªã x√≥a vƒ©nh vi·ªÖn" });
    } catch (error) {
        console.error("L·ªói x√≥a li√™n h·ªá:", error);
        res.status(500).json({ success: false, message: "L·ªói x√≥a c·ª©ng Contact Us" });
    }
};

// C·∫≠p nh·∫≠t tr·∫°ng th√°i isResolved c·ªßa Contact Us
exports.updateContactUs = async (req, res) => {
    try {
        console.log(`üì§ C·∫≠p nh·∫≠t Contact ID: ${req.params.id}`, req.body);

        const updatedContact = await ContactUs.findByIdAndUpdate(
            req.params.id, 
            req.body, 
            { new: true, runValidators: true }
        );

        if (!updatedContact) {
            return res.status(404).json({ success: false, message: "Contact kh√¥ng t·ªìn t·∫°i." });
        }

        console.log("‚úÖ Contact ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t:", updatedContact);
        res.json({ success: true, message: "C·∫≠p nh·∫≠t th√†nh c√¥ng!", data: updatedContact });
    } catch (error) {
        console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t Contact:", error);
        res.status(500).json({ success: false, message: "L·ªói server khi c·∫≠p nh·∫≠t Contact", error: error.message });
    }
};


