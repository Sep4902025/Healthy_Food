import axios from "axios";

const API_URL = process.env.REACT_APP_API_URL;

// H√†m l·∫•y token t·ª´ localStorage
const getAuthHeaders = () => {
  const token = localStorage.getItem("token");
  return token ? { Authorization: `Bearer ${token}` } : {};
};

const dishesService = {
  // üîπ L·∫•y t·∫•t c·∫£ m√≥n ƒÉn
  getAllDishes: async () => {
    try {
      const response = await axios.get(`${API_URL}/dishes`, {
        headers: getAuthHeaders(),
        withCredentials: true,
      });
      console.log("üîç Danh s√°ch m√≥n ƒÉn t·ª´ API:", response.data);
      return { success: true, data: response.data.data || [] };
    } catch (error) {
      console.error(
        "‚ùå L·ªói khi l·∫•y m√≥n ƒÉn:",
        error.response?.data || error.message
      );
      return { success: false, message: "L·ªói khi t·∫£i danh s√°ch m√≥n ƒÉn" };
    }
  },

  // üîπ Th√™m m√≥n ƒÉn m·ªõi
  createDish: async (data) => {
    try {
      const response = await axios.post(`${API_URL}/dishes`, data, {
        headers: getAuthHeaders(),
        withCredentials: true,
      });
      console.log("‚úÖ Ph·∫£n h·ªìi t·ª´ server:", response.data);
      return { success: true };
    } catch (error) {
      console.error(
        "‚ùå L·ªói khi th√™m m√≥n ƒÉn:",
        error.response?.data || error.message
      );
      return { success: false, message: "Th√™m m√≥n ƒÉn th·∫•t b·∫°i!" };
    }
  },

  // üîπ C·∫≠p nh·∫≠t m√≥n ƒÉn
  updateDish: async (id, data) => {
    try {
      console.log(`üì§ C·∫≠p nh·∫≠t m√≥n ƒÉn ID: ${id}`, data);

      await axios.put(`${API_URL}/dishes/${id}`, data, {
        headers: getAuthHeaders(),
        withCredentials: true,
      });

      return { success: true };
    } catch (error) {
      console.error(
        "‚ùå L·ªói khi c·∫≠p nh·∫≠t m√≥n ƒÉn:",
        error.response?.data || error.message
      );
      return { success: false, message: "C·∫≠p nh·∫≠t m√≥n ƒÉn th·∫•t b·∫°i!" };
    }
  },

  // üîπ X√≥a vƒ©nh vi·ªÖn m√≥n ƒÉn
  hardDeleteDish: async (id) => {
    try {
      console.log(`üóëÔ∏è X√≥a vƒ©nh vi·ªÖn m√≥n ƒÉn ID: ${id}`);

      await axios.delete(`${API_URL}/dishes/${id}`, {
        headers: getAuthHeaders(),
        withCredentials: true,
      });

      return { success: true };
    } catch (error) {
      console.error(
        "‚ùå L·ªói khi x√≥a vƒ©nh vi·ªÖn m√≥n ƒÉn:",
        error.response?.data || error.message
      );
      return { success: false, message: "X√≥a vƒ©nh vi·ªÖn m√≥n ƒÉn th·∫•t b·∫°i!" };
    }
  },

  //Recipes
  getDishById: async (dishId) => {
    try {
      const response = await axios.get(`${API_URL}/dishes/${dishId}`);
      console.log("Fetched Dish:", response.data); // Debug API response
      return {
        success: true,
        data: response.data.data || {}, // ƒê·∫£m b·∫£o data lu√¥n l√† object
      };
    } catch (error) {
      console.error("Error fetching dish:", error);
      return {
        success: false,
        message: error.response?.data?.error || "L·ªói khi t·∫£i m√≥n ƒÉn",
      };
    }
  },
};

export default dishesService;
